// code generated by `go run tuple_gen.go`; DO NOT EDIT.

package values

type Tuple3[T1, T2, T3 any] struct {
	Val1 T1
	Val2 T2
	Val3 T3
}

func Make3[T1, T2, T3 any](v1 T1, v2 T2, v3 T3) Tuple3[T1, T2, T3] {
	return Tuple3[T1, T2, T3]{
		Val1: v1,
		Val2: v2,
		Val3: v3,
	}
}

type Tuple4[T1, T2, T3, T4 any] struct {
	Val1 T1
	Val2 T2
	Val3 T3
	Val4 T4
}

func Make4[T1, T2, T3, T4 any](v1 T1, v2 T2, v3 T3, v4 T4) Tuple4[T1, T2, T3, T4] {
	return Tuple4[T1, T2, T3, T4]{
		Val1: v1,
		Val2: v2,
		Val3: v3,
		Val4: v4,
	}
}

type Tuple5[T1, T2, T3, T4, T5 any] struct {
	Val1 T1
	Val2 T2
	Val3 T3
	Val4 T4
	Val5 T5
}

func Make5[T1, T2, T3, T4, T5 any](v1 T1, v2 T2, v3 T3, v4 T4, v5 T5) Tuple5[T1, T2, T3, T4, T5] {
	return Tuple5[T1, T2, T3, T4, T5]{
		Val1: v1,
		Val2: v2,
		Val3: v3,
		Val4: v4,
		Val5: v5,
	}
}

type Tuple6[T1, T2, T3, T4, T5, T6 any] struct {
	Val1 T1
	Val2 T2
	Val3 T3
	Val4 T4
	Val5 T5
	Val6 T6
}

func Make6[T1, T2, T3, T4, T5, T6 any](v1 T1, v2 T2, v3 T3, v4 T4, v5 T5, v6 T6) Tuple6[T1, T2, T3, T4, T5, T6] {
	return Tuple6[T1, T2, T3, T4, T5, T6]{
		Val1: v1,
		Val2: v2,
		Val3: v3,
		Val4: v4,
		Val5: v5,
		Val6: v6,
	}
}

type Tuple7[T1, T2, T3, T4, T5, T6, T7 any] struct {
	Val1 T1
	Val2 T2
	Val3 T3
	Val4 T4
	Val5 T5
	Val6 T6
	Val7 T7
}

func Make7[T1, T2, T3, T4, T5, T6, T7 any](v1 T1, v2 T2, v3 T3, v4 T4, v5 T5, v6 T6, v7 T7) Tuple7[T1, T2, T3, T4, T5, T6, T7] {
	return Tuple7[T1, T2, T3, T4, T5, T6, T7]{
		Val1: v1,
		Val2: v2,
		Val3: v3,
		Val4: v4,
		Val5: v5,
		Val6: v6,
		Val7: v7,
	}
}

type Tuple8[T1, T2, T3, T4, T5, T6, T7, T8 any] struct {
	Val1 T1
	Val2 T2
	Val3 T3
	Val4 T4
	Val5 T5
	Val6 T6
	Val7 T7
	Val8 T8
}

func Make8[T1, T2, T3, T4, T5, T6, T7, T8 any](v1 T1, v2 T2, v3 T3, v4 T4, v5 T5, v6 T6, v7 T7, v8 T8) Tuple8[T1, T2, T3, T4, T5, T6, T7, T8] {
	return Tuple8[T1, T2, T3, T4, T5, T6, T7, T8]{
		Val1: v1,
		Val2: v2,
		Val3: v3,
		Val4: v4,
		Val5: v5,
		Val6: v6,
		Val7: v7,
		Val8: v8,
	}
}

type Tuple9[T1, T2, T3, T4, T5, T6, T7, T8, T9 any] struct {
	Val1 T1
	Val2 T2
	Val3 T3
	Val4 T4
	Val5 T5
	Val6 T6
	Val7 T7
	Val8 T8
	Val9 T9
}

func Make9[T1, T2, T3, T4, T5, T6, T7, T8, T9 any](v1 T1, v2 T2, v3 T3, v4 T4, v5 T5, v6 T6, v7 T7, v8 T8, v9 T9) Tuple9[T1, T2, T3, T4, T5, T6, T7, T8, T9] {
	return Tuple9[T1, T2, T3, T4, T5, T6, T7, T8, T9]{
		Val1: v1,
		Val2: v2,
		Val3: v3,
		Val4: v4,
		Val5: v5,
		Val6: v6,
		Val7: v7,
		Val8: v8,
		Val9: v9,
	}
}

type Tuple10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 any] struct {
	Val1  T1
	Val2  T2
	Val3  T3
	Val4  T4
	Val5  T5
	Val6  T6
	Val7  T7
	Val8  T8
	Val9  T9
	Val10 T10
}

func Make10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10 any](v1 T1, v2 T2, v3 T3, v4 T4, v5 T5, v6 T6, v7 T7, v8 T8, v9 T9, v10 T10) Tuple10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10] {
	return Tuple10[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]{
		Val1:  v1,
		Val2:  v2,
		Val3:  v3,
		Val4:  v4,
		Val5:  v5,
		Val6:  v6,
		Val7:  v7,
		Val8:  v8,
		Val9:  v9,
		Val10: v10,
	}
}
